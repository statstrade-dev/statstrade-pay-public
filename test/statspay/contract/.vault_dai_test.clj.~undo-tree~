(undo-tree-save-format-version . 1)
"9ff4cac69cf4c6a2f20c4f144a982ed1c1838e94"
[nil nil nil nil (25722 61990 582197 0) 0 nil]
([nil nil ((730 . 773) (#("    \"core-assets/contract/erc20/Dai.json\")))" 0 4 (fontified t help-echo cider--help-echo cider-locals ("std.json/read")) 4 41 (fontified t help-echo cider--help-echo cider-locals ("std.json/read") face font-lock-string-face) 41 42 (fontified t help-echo cider--help-echo cider-locals ("std.json/read") face (rainbow-delimiters-depth-3-face)) 42 43 (fontified t help-echo cider--help-echo cider-locals ("std.json/read") face (rainbow-delimiters-depth-2-face)) 43 44 (fontified t help-echo cider--help-echo cider-locals ("std.json/read") face (rainbow-delimiters-depth-1-face))) . 730) (undo-tree-id0 . -17) (t 25718 17057 467836 316000)) nil (25722 61990 582194 0) 0 nil])
([nil nil ((#("http://192.168.0.10:8545" 0 24 (help-echo cider--help-echo fontified t cider-locals ("args" "name") face font-lock-string-face)) . 882) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (t 25722 61990 584157 230000)) nil (25722 63007 115599 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 905 . 906) (nil fontified nil 882 . 906) (882 . 906)) nil (25722 63007 115572 0) 0 nil])
([nil nil ((3832 . 3879) ("    (eth-lib/get-signer \"http://192.168.0.10:8545\"" . 3832) (3414 . 3468) ("    (eth-lib/new-rpc-provider \"http://192.168.0.10:8545\")" . 3414) (2099 . 2152) (#("          (eth-lib/get-signer \"http://192.168.0.10:8545\"" 0 10 (help-echo cider--help-echo fontified t cider-locals ("address")) 10 11 (help-echo cider--help-echo fontified t cider-locals ("address") face (rainbow-delimiters-depth-6-face)) 11 18 (help-echo cider--help-echo fontified t cider-locals ("address") face font-lock-type-face) 18 30 (help-echo cider--help-echo fontified t cider-locals ("address")) 30 56 (help-echo cider--help-echo fontified t cider-locals ("address") face font-lock-string-face)) . 2099) (1407 . 1435) (#("     \"http://192.168.0.10:8545\"" 0 5 (help-echo cider--help-echo fontified t cider-locals nil) 5 31 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face)) . 1407) (853 . 904) (#("        (eth-lib/get-signer \"http://192.168.0.10:8545\"" 0 8 (help-echo cider--help-echo fontified t cider-locals ("args" "name")) 8 9 (help-echo cider--help-echo fontified t cider-locals ("args" "name") face (rainbow-delimiters-depth-6-face)) 9 16 (help-echo cider--help-echo fontified t cider-locals ("args" "name") face font-lock-type-face) 16 28 (help-echo cider--help-echo fontified t cider-locals ("args" "name")) 28 29 (help-echo cider--help-echo fontified t cider-locals ("args" "name") face font-lock-string-face) 29 52 (fontified t help-echo cider--help-echo cider-locals ("args" "name") face font-lock-string-face) 52 53 (fontified t rear-nonsticky t help-echo cider--help-echo cider-locals ("args" "name") face font-lock-string-face) 53 54 (help-echo cider--help-echo fontified t cider-locals ("args" "name") face font-lock-string-face)) . 853) (undo-tree-id1 . -29) (undo-tree-id2 . -29) (undo-tree-id3 . -29) (undo-tree-id4 . -29) (undo-tree-id5 . -29) (undo-tree-id6 . -29) (undo-tree-id7 . -29) (undo-tree-id8 . -29) (undo-tree-id9 . -29) (undo-tree-id10 . -29) (undo-tree-id11 . -29) (undo-tree-id12 . -29) (undo-tree-id13 . -29) (undo-tree-id14 . -29) (undo-tree-id15 . -29) (undo-tree-id16 . -29) (undo-tree-id17 . -29) (undo-tree-id18 . -29) (undo-tree-id19 . -29) (undo-tree-id20 . -29) (undo-tree-id21 . -29) (undo-tree-id22 . -29) (undo-tree-id23 . -29) (undo-tree-id24 . -29) (undo-tree-id25 . -29) (undo-tree-id26 . -29) (undo-tree-id27 . -29) (undo-tree-id28 . -29) (undo-tree-id29 . -29) (undo-tree-id30 . -29) (undo-tree-id31 . -29) (undo-tree-id32 . -29) (undo-tree-id33 . -29) (undo-tree-id34 . -29) (undo-tree-id35 . -29) (undo-tree-id36 . -29) (undo-tree-id37 . -29) (undo-tree-id38 . -29) (undo-tree-id39 . -29) (undo-tree-id40 . -29) (undo-tree-id41 . -29) (undo-tree-id42 . -29) (undo-tree-id43 . -29) (undo-tree-id44 . -29) (undo-tree-id45 . -29) (undo-tree-id46 . -29) (undo-tree-id47 . -29) (undo-tree-id48 . -29) (undo-tree-id49 . -29) (undo-tree-id50 . -29) (undo-tree-id51 . -29) (undo-tree-id52 . -29) (undo-tree-id53 . -29) (undo-tree-id54 . -29) (undo-tree-id55 . -29) (undo-tree-id56 . -29) (undo-tree-id57 . -29) (undo-tree-id58 . -29) (undo-tree-id59 . -29) (undo-tree-id60 . -29) (undo-tree-id61 . -29) (undo-tree-id62 . -29) (undo-tree-id63 . -29) (undo-tree-id64 . -29) (undo-tree-id65 . -29) (undo-tree-id66 . -29) (undo-tree-id67 . -29) (undo-tree-id68 . -29) (undo-tree-id69 . -29) (undo-tree-id70 . -29) (undo-tree-id71 . -29) (undo-tree-id72 . -29) (undo-tree-id73 . -29) (undo-tree-id74 . -29) (undo-tree-id75 . -29) (undo-tree-id76 . -29) (undo-tree-id77 . -29) (undo-tree-id78 . -29) (undo-tree-id79 . -29) (undo-tree-id80 . -29) (undo-tree-id81 . -29) (undo-tree-id82 . -29) (undo-tree-id83 . -29) (undo-tree-id84 . -29) (undo-tree-id85 . -29) (undo-tree-id86 . -29) (undo-tree-id87 . -29) (undo-tree-id88 . -29) (undo-tree-id89 . -29) (undo-tree-id90 . -29) (undo-tree-id91 . -29) (undo-tree-id92 . -29) (undo-tree-id93 . -29) (undo-tree-id94 . -29) (undo-tree-id95 . -29) (undo-tree-id96 . -29) (undo-tree-id97 . -29) (undo-tree-id98 . -29) (undo-tree-id99 . -29) (undo-tree-id100 . -29) (undo-tree-id101 . -29) (undo-tree-id102 . -29) (undo-tree-id103 . -29) (undo-tree-id104 . -29) (undo-tree-id105 . -29) (undo-tree-id106 . -29) (undo-tree-id107 . -29) (undo-tree-id108 . -29) (undo-tree-id109 . -29) (undo-tree-id110 . -29) (undo-tree-id111 . -29) (undo-tree-id112 . -29) (undo-tree-id113 . -29) (undo-tree-id114 . -29) (undo-tree-id115 . -29) (undo-tree-id116 . -29) (undo-tree-id117 . -29) (undo-tree-id118 . -29) (undo-tree-id119 . -29) (undo-tree-id120 . -29) (undo-tree-id121 . -29) (undo-tree-id122 . -29) (undo-tree-id123 . -29) (undo-tree-id124 . -29) (undo-tree-id125 . -29) (undo-tree-id126 . -29) (undo-tree-id127 . -29) (undo-tree-id128 . -29) (undo-tree-id129 . -29) (undo-tree-id130 . -29) (undo-tree-id131 . -29) (undo-tree-id132 . -29) (undo-tree-id133 . -29) (undo-tree-id134 . -29) (undo-tree-id135 . -29) (undo-tree-id136 . -29) (undo-tree-id137 . -29) (undo-tree-id138 . -29) (undo-tree-id139 . -29) (undo-tree-id140 . -29) (undo-tree-id141 . -29) (undo-tree-id142 . -29) (undo-tree-id143 . -29) (undo-tree-id144 . -29) (undo-tree-id145 . -29) (undo-tree-id146 . -29) (undo-tree-id147 . -29) (undo-tree-id148 . -29) (undo-tree-id149 . -29) (undo-tree-id150 . -29) (undo-tree-id151 . -29) (undo-tree-id152 . -29) (undo-tree-id153 . -29) (undo-tree-id154 . -29) (undo-tree-id155 . -29) (undo-tree-id156 . -29) (undo-tree-id157 . -29) (undo-tree-id158 . -29) (undo-tree-id159 . -29) (undo-tree-id160 . -29) (undo-tree-id161 . -29) (undo-tree-id162 . -29) (undo-tree-id163 . -29) (undo-tree-id164 . -29) (undo-tree-id165 . -29) (undo-tree-id166 . -29) (undo-tree-id167 . -29) (undo-tree-id168 . -29) (undo-tree-id169 . -29) (undo-tree-id170 . -29) (undo-tree-id171 . -29) (undo-tree-id172 . -29) (undo-tree-id173 . -29) (undo-tree-id174 . -29) (undo-tree-id175 . -29) (undo-tree-id176 . -29) (undo-tree-id177 . -29) (undo-tree-id178 . -29) (undo-tree-id179 . -29) (undo-tree-id180 . -29) (undo-tree-id181 . -29) (undo-tree-id182 . -29) (undo-tree-id183 . -29) (undo-tree-id184 . -29) (undo-tree-id185 . -29) (undo-tree-id186 . -29) (undo-tree-id187 . -29) (undo-tree-id188 . -29) (undo-tree-id189 . -29) (undo-tree-id190 . -29) (undo-tree-id191 . -29) (undo-tree-id192 . -53) (undo-tree-id193 . -53) (undo-tree-id194 . -53) (undo-tree-id195 . -53) (undo-tree-id196 . -53) (undo-tree-id197 . -53) (undo-tree-id198 . -53) (undo-tree-id199 . -53) (undo-tree-id200 . -53) (undo-tree-id201 . -53) (undo-tree-id202 . -53) (undo-tree-id203 . -53) (undo-tree-id204 . -53) (undo-tree-id205 . -53) (undo-tree-id206 . -53) (undo-tree-id207 . -53) (undo-tree-id208 . -53) (undo-tree-id209 . -53) (undo-tree-id210 . -53) (undo-tree-id211 . -53) (undo-tree-id212 . -53) (undo-tree-id213 . -53) (undo-tree-id214 . -53) (undo-tree-id215 . -53) (undo-tree-id216 . -53) (undo-tree-id217 . -53) (undo-tree-id218 . -53) (undo-tree-id219 . -53) (undo-tree-id220 . -53) (undo-tree-id221 . -53) (undo-tree-id222 . -53) (undo-tree-id223 . -53) (undo-tree-id224 . -53) (undo-tree-id225 . -53) (undo-tree-id226 . -53)) nil (25722 63007 115563 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2760 . 2761) (nil fontified nil 2580 . 2761) (2580 . 2761) (t 25722 63007 117406 516000)) nil (25722 63502 881494 0) 0 nil])
([nil current ((#("[\"/bin/bash\" \"-c\"
                (str/join
                 \" \"
                 [\"ganache --gasLimit 10000000000\"
                  \"--chain.allowUnlimitedContractSize\"
                  \"--wallet.seed 'tahto/statspay.testnet'\"
                  \"--host '0.0.0.0'\"])]" 0 1 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-6-face)) 1 12 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 12 13 (help-echo cider--help-echo fontified t cider-locals nil) 13 17 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 17 18 (help-echo cider--help-echo fontified t cider-locals nil) 18 34 (help-echo cider--help-echo fontified t cider-locals nil) 34 35 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-7-face)) 35 38 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-type-face) 38 61 (help-echo cider--help-echo fontified t cider-locals nil) 61 64 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 64 82 (help-echo cider--help-echo fontified t cider-locals nil) 82 83 (help-echo cider--help-echo fontified t cider-locals nil face (rainbow-delimiters-depth-8-face)) 83 115 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 115 134 (help-echo cider--help-echo fontified t cider-locals nil) 134 170 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 170 189 (help-echo cider--help-echo fontified t cider-locals nil) 189 229 (help-echo cider--help-echo fontified t cider-locals nil face font-lock-string-face) 229 245 (help-echo cider--help-echo fontified t cider-locals nil) 245 248 (fontified t help-echo cider--help-echo cider-locals nil) 248 251 (fontified t help-echo cider--help-echo cider-locals nil face font-lock-string-face) 251 266 (cider-locals nil face font-lock-string-face fontified t) 266 267 (cider-locals nil face (rainbow-delimiters-depth-8-face) fontified t) 267 268 (cider-locals nil face (rainbow-delimiters-depth-7-face) fontified t) 268 269 (cider-locals nil face (rainbow-delimiters-depth-6-face) fontified t)) . 2761) (undo-tree-id278 . -82) (undo-tree-id279 . -18)) nil (25722 63502 881487 0) 0 nil])
nil
